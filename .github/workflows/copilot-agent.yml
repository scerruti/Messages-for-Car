name: GitHub Copilot Coding Agent

on:
  issues:
    types: [opened, edited, labeled]
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  trigger-copilot-agent:
    runs-on: ubuntu-latest
    if: |
      (github.event.action == 'opened' && contains(github.event.issue.body, '@github-copilot')) ||
      (github.event.action == 'labeled' && github.event.label.name == 'copilot-agent') ||
      (github.event.action == 'created' && contains(github.event.comment.body, '@github-copilot'))
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract issue details
        id: issue-details
        run: |
          echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          echo "issue_title=${{ github.event.issue.title }}" >> $GITHUB_OUTPUT
          echo "issue_body<<EOF" >> $GITHUB_OUTPUT
          echo "${{ github.event.issue.body }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create feature branch
        run: |
          BRANCH_NAME="copilot/issue-${{ steps.issue-details.outputs.issue_number }}"
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Comment on issue - Starting work
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ steps.issue-details.outputs.issue_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ü§ñ **GitHub Copilot Agent Started**
              
              I'm now working on this issue. Here's what I'll do:
              
              1. üîç Analyze the issue requirements
              2. üõ†Ô∏è Implement the necessary changes
              3. üß™ Build and test the solution
              4. üìù Create a pull request with the implementation
              
              Branch: \`${process.env.BRANCH_NAME}\`
              
              _This is an automated process. The coding agent will create a PR when ready._`
            });

      - name: Build project to ensure it's working
        run: ./gradlew assembleDebug

      - name: Add copilot agent label
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: ${{ steps.issue-details.outputs.issue_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['copilot-agent', 'in-progress']
            });

      - name: Trigger Copilot Workspace
        uses: actions/github-script@v7
        with:
          script: |
            // This creates a comment that GitHub Copilot can respond to
            github.rest.issues.createComment({
              issue_number: ${{ steps.issue-details.outputs.issue_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `@github-copilot implement this feature according to the issue description. 

              **Context:**
              - This is an Android Automotive messaging app
              - Uses Jetpack Compose for UI
              - Currently has WebView implementation with QR code issues
              - Follow the coding guidelines in .github/copilot-instructions.md
              
              **Requirements:**
              - Maintain automotive safety standards
              - Use Material 3 design system
              - Follow MVVM architecture pattern
              - Add appropriate tests
              
              Please implement the solution and create a pull request.`
            });

  auto-merge-copilot-prs:
    runs-on: ubuntu-latest
    if: github.event.pull_request && contains(github.event.pull_request.head.ref, 'copilot/')
    
    steps:
      - name: Auto-approve Copilot PRs
        uses: actions/github-script@v7
        with:
          script: |
            if (context.payload.pull_request.user.login === 'github-copilot[bot]') {
              github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                event: 'APPROVE',
                body: 'ü§ñ Auto-approved by Copilot workflow. Please review manually before merging.'
              });
            }
